{% extends "apps/wp/templates/wp/form.twig" %}

{% block main %}
  <div class="panel panel-default">
    <div class="panel-heading">
      &nbsp;
    </div>
    
    <div style="margin: 20px;">
      <h3>Select Twitter Followers</h3>
    </div>
    
    <div class="panel panel-default" style="margin: 20px;">
      <div class="panel-body" id="twitter-view" style="height: 250px;">
        <i class="fa fa-spinner fa-spin"></i> Loading
      </div>
    </div>

    <div class="panel-body">
      {% for field in form.visible %}
        {{ field.field|raw }}
      {% endfor %}

      {% for field in form.hidden %}
        {{ field.field|raw }}
      {% endfor %}
    </div>
  </div>

  <script type="text/template" id="twitter-login-template">
    <a href="/twitter/?skip=1&return={{ blink.request.url }}" class="btn btn-block btn-u btn-u-aqua">
      <i class="fa fa-twitter"></i>
      Twitter Login
    </a>
  </script>
  
  <script type="text/template" id="twitter-followers-template">
    <div class="media">
      <div class="media-left">
        <a href="#">
          <img class="media-object" src="<%= follower.profile_image_url %>" alt="...">
        </a>
      </div>
      <div class="media-body">
        <h4 class="media-heading">
          <input type="checkbox" class="follower" value="<%= follower.screen_name %>" <%= follower.checked %> />&nbsp;&nbsp;&nbsp;
          <%= follower.name %>[<%= follower.screen_name %>]
        </h4>
      </div>
    </div>
    <hr />
  </script>
  
  <script>
    $(function() {
      var swig = require('swig');
      
      var tpl_selected = swig.compileFile($('#selected-twitter-followers').html());
      var tpl_search = swig.compileFile($('#searched-twitter-followers').html());
      var tpl_followers = swig.compileFile($('#twitter-followers').html());
      var tppl_login = swig.complineFile($('#twitter-login').html());
      
      $.ajax({
                url: '/wp/twitter/search/',
                data: {'keyword': keyword},
                dataType: 'json',
                success: function (data) {
                    $('#twitter-view').html('');
                    _.map(data.follower_list, function(follower) {
                      $('#twitter-view').append(tpl_search(follower));
                    });
                },
                error: function () {
                    $('#twitter-view').html('Error retrieving users.');
                }
            });
      
    });
  </script>
  
  <script>
    $(function() {
      // Disabled next button until they are logged in.
      $('#next_button').addClass('disabled');
      
      // Set the announcement cookie whenever value changes in case they navigate away.
      $('#quantity').keyup(function () {
        $.cookie('quantity', $(this).val());
      });
      $('#delivery_message').keyup(function () {
        $.cookie('delivery_message', $(this).val());
      });
      $('#expiring_date').keyup(function () {
        $.cookie('expiring_date', $(this).val());
      });
  
      // View to display if they have not logged in to twitter.
      var twitterLoginView = new (Backbone.View.extend({
        el: '#twitter-view',
        view: null,
        template: _.template($('#twitter-login-template').html()),
        render: function() {
          this.$el.html(this.template());
        }
      }));

      // View to display if they have logged in to twitter.
      var twitterFollowersView = new (Backbone.View.extend({
        el: '#twitter-view',
        view: null,
        follower_list: null,
        template: _.template($('#twitter-followers-template').html()),
        events: {
          'click .follower': 'selected'
        },
        selected: function(e) {
          var sn = $(e.target).val();
          var followers = ($('#twitter_followers').val()) ? $('#twitter_followers').val().split(',') : [];
          if(_.contains(followers, sn)) {
            followers.splice(followers.indexOf(sn), 1);
          } else {
            followers.push(sn);
          }
          
          // Set the followers back.
          $('#twitter_followers').val(followers.join(','));
          
          // Enable next button.
          if(followers.length) {
            $('#next_button').removeClass('disabled');
          } else {
            $('#next_button').addClass('disabled');
          }
        },
        render: function() {
          var that = this;
          this.$el.html('');
          
          // Get any selected followers.
          var followers = ($('#twitter_followers').val()) ? $('#twitter_followers').val().split(',') : [];
          
          // Render the followers and add them, selecting those selected already.
          _.each(this.follower_list, function(follower) {
            var foll = $.extend({checked: ''}, follower);
            foll.checked = (_.contains(followers, follower.screen_name)) ? 'checked' : '';
            that.$el.append(that.template({follower: foll}));
          });
          
          // If we have followers, then remove the disable button.
          if($('#twitter_followers').val()) {
            $('#next_button').removeClass('disabled');
          }
        }
      }));

      // Point each view to the other.
      twitterLoginView.view = twitterFollowersView;
      twitterFollowersView.view = twitterLoginView;

      // Ping Twitter API to see if they are logged in.
      $.get('/twitter/authenticated/', function(data) {
        if(data.authenticated) {
          $.get('/twitter/followers/', function(data) {
            twitterFollowersView.follower_list = data.follower_list;
            twitterFollowersView.render();
          });
        } else {
          twitterLoginView.render();
        }
      });
    });
  </script>
{% endblock main %}